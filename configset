#-*- coding:utf-8 -*-
#/usr/bin/env python
#-*- coding:utf-8 -*-
#/usr/bin/env python
import os
import json
arg = '{"backend": "www.Alan.com","record":{"server":"172.16.189.10","weight":20,"maxconn":3000}}'
#查找backend记录
def select_backend(domain):
    #从文件获取数据
    with open('web.conf','rU')as file_read:
        #设置初始flage状态为Flase
        flag = False
        #设置backend列表存储取出的backend元素
        backend_list = []
        for i in file_read:
            #将文件中的每一行进行剔除空格和换行
            # 然后把要查找的backend和该行进行对比，如果一致则将flag设置为True 并跳出当前循环
            if i.strip() == ('backend %s')%domain:
                flag = True
                continue
            #判断flag是否为True是则表示已经找到该backend，如果下一行记录为backend记录则退出循环
            if flag and i.strip().startswith('backend'):
                break
            #判断是否找到要查询的backend 如果找到则下一行加入backend_list 列表
            if flag:
                backend_list.append(i.strip())
        #函数执行完毕返回backend_list列表
        return backend_list
#添加backend记录
def add_backend(arg):
    flag = False
    tage = False
    len_write = True
    #调用json将的数据输入格式化为字典
    backend_dict = json.loads(arg)
    #格式化完成后字符串应该是这样的
    '''
    {u'record': {u'maxconn': 30, u'weight': 20, u'server': u'100.1.7.9'},
    u'backend': u'www.oldboy.org'}
    '''
    backend_list = select_backend(backend_dict.get('backend'))
    domain = backend_dict.get('backend')
    record_list = backend_dict.get('record')
    record = 'server {server} weight {weight} maxconn {maxconn}'.format(server = record_list.get('server'),weight = record_list.get('weight'),maxconn = record_list.get('maxconn'))
    with open('web.conf','r') as file_read,open('web.bak','w') as file_write:
        if not backend_list:
            for i in file_read:
                file_write.write(i)
            file_write.write('\nbackend %s'%domain)
            file_write.write('\n'+' '*8+record)
        else:
            #判断是否存在该记录如果存在则将tage置为True如果不存在则添加记录到back_list列表
            if not record in backend_list:
                backend_list.append(record)
            for i in file_read:
                #如果backend_list为空，则表明此backend下没有record记录 不将backend写入新文件
                if i.strip() == 'backend %s'%domain:
                    file_write.write(i)
                    #找到匹配的backend将flag设置为True
                    flag = True
                    continue
                if flag:
                    if not tage and len_write:
                        #写配置文件的要添加的部分
                        for s in backend_list:
                            file_write.write(' '*8+s+'\n')
                        #要修改的数据写入一次之后将状态设置为True 以后不再写
                        len_write = False
                    #如果flag为True则表明已经找到匹配的backend
                    #如果当前行再次匹配backend开头，则表明找到第二个backend可以进行后半段写入了
                    if flag and i.strip().startswith('backend'):
                        #找到匹配的backend后的第一个backend标签则将tage设置为True
                        tage = True
                    #如果tage为true则表明可以进行后半段读写
                    if tage:
                        #写配置文件的后半段
                        file_write.write(i)
                else:
                    #写配置文件的前半段
                    file_write.write(i)

#删除backend记录
def del_backend(arg):
    flag = False
    tage = False
    len_write = True
    #调用json将的数据输入格式化为字典
    backend_dict = json.loads(arg)
    #格式化完成后字符串应该是这样的
    '''
    {u'record': {u'maxconn': 30, u'weight': 20, u'server': u'100.1.7.9'},
    u'backend': u'www.oldboy.org'}
    '''
    #获取backend列表
    backend_list = select_backend(backend_dict.get('backend'))
    #backend获取域名信息
    domain = backend_dict.get('backend')
    #获取record信息
    record_list = backend_dict.get('record')
    record = 'server {server} weight {weight} maxconn {maxconn}'.format(server = record_list.get('server'),weight = record_list.get('weight'),maxconn = record_list.get('maxconn'))
    #打开web.conf 并创建一个web.bak文件 将修改过后的内容先存入web.bak
    with open('web.conf','r') as file_read,open('web.bak','w') as file_write:
        #如果backend_list为空，则表明没有此backend记录直接将旧文件写入新文件即可
        if not backend_list:
            for i in file_read:
                file_write.write(i)
        else:
            #判断是否存在要查询的record记录 如果存在则删除
            if record in backend_list:
                backend_list.remove(record)
            for i in file_read:
                #查找匹配的backend
                if i.strip() == 'backend %s'%domain:
                    #如果backend_list为空，则表明此backend下没有record记录 不将backend写入新文件
                    if backend_list:
                        file_write.write(i)
                    #找到匹配的backend将flag设置为True
                    flag = True
                    continue
                if flag:
                    if not tage and len_write:
                        #写配置文件的要添加的部分
                        for s in backend_list:
                            file_write.write(' '*8+s+'\n')
                        #要修改的数据写入一次之后将状态设置为True 以后不再写
                        len_write = False
                    #如果flag为True则表明已经找到匹配的backend
                    #如果当前行再次匹配backend开头，则表明找到第二个backend可以进行后半段写入了
                    if flag and i.strip().startswith('backend'):
                        #找到匹配的backend后的第一个backend标签则将tage设置为True
                        tage = True
                    #如果tage为true则表明可以进行后半段读写
                    if tage:
                        #写配置文件的后半段
                        file_write.write(i)
                else:
                    #写配置文件的前半段
                    file_write.write(i)
if __name__ == '__main__':
    try:
        print ''.center(20,'-')
        print '1.| 查询请输入 1'.center(20)
        print '2.| 添加请输入 2'.center(20)
        print '3.| 删除请输入 3'.center(20)
        print ''.center(20,'-')
        input_number = int(raw_input('请输入你要执行的选项:'))
        if input_number == 1:
            domain = raw_input('请输入你要查询的域名:')
            print '查询结果'.center(50,'#')
            print 'backend %s'%domain
            for i in select_backend(domain):
                print "\t",i
        elif input_number == 2:
            add_backend(arg)
        elif input_number == 3:
            del_backend(arg)
        else:
            print '输入不正确 请输入1,2或者3:'
    except ValueError:
        print '请输入正确的整数类型'
